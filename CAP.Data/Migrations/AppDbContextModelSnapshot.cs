// <auto-generated />
using System;
using CAP.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CAP.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CAP.Entity.Entities.ADDRESS", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("STATUSS")
                        .HasColumnType("bit");

                    b.Property<string>("ad_address")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ADDRESSES");

                    b.HasData(
                        new
                        {
                            ID = new Guid("c12cef77-cb66-495f-bfde-4488936a488d"),
                            STATUSS = true,
                            ad_address = "Test1 Mah. Test1 Sok. No 1 Daire 1 Test1/TEST1"
                        });
                });

            modelBuilder.Entity("CAP.Entity.Entities.TAXPAYER", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("STATUSS")
                        .HasColumnType("bit");

                    b.Property<long>("VKN")
                        .HasMaxLength(11)
                        .HasColumnType("bigint");

                    b.Property<Guid?>("tp_addressID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("tp_address_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("tp_company_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("tp_email")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("tp_employees_num")
                        .HasColumnType("int");

                    b.Property<string>("tp_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("tp_opening_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("tp_phone")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("tp_tax_office")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("tp_addressID");

                    b.ToTable("TAXPAYERS");

                    b.HasData(
                        new
                        {
                            ID = new Guid("988c2d42-05c6-417e-bd3d-80290ea5240d"),
                            STATUSS = true,
                            VKN = 11111111111L,
                            tp_address_id = new Guid("c12cef77-cb66-495f-bfde-4488936a488d"),
                            tp_company_name = "test1_firma_adı",
                            tp_email = "test1_taxpayer@test.com",
                            tp_employees_num = 30,
                            tp_name = "test1_mükellef_ismi",
                            tp_opening_date = new DateTime(2023, 10, 15, 17, 6, 32, 352, DateTimeKind.Local).AddTicks(190),
                            tp_phone = "+901112223301",
                            tp_tax_office = "Test1_Vergi_Dairesi"
                        });
                });

            modelBuilder.Entity("CAP.Entity.Entities.USERS", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("STATUSS")
                        .HasColumnType("bit");

                    b.Property<string>("u_address")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("u_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("u_department")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("u_email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("u_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("u_password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("u_phone")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.HasKey("ID");

                    b.ToTable("USERs");

                    b.HasData(
                        new
                        {
                            ID = new Guid("cbc8df17-3577-4119-a430-ad82741b69c7"),
                            STATUSS = true,
                            u_address = "Test1 Mah. Test1 Sok. No:1 Daire:1 TEST_ilçe/TEST_il",
                            u_date = new DateTime(2023, 10, 15, 17, 6, 32, 352, DateTimeKind.Local).AddTicks(290),
                            u_department = "Test1",
                            u_email = "test1_mail@test_mail.com",
                            u_name = "Test1_Name_Surname",
                            u_password = "test123",
                            u_phone = "+901112223301"
                        });
                });

            modelBuilder.Entity("CAP.Entity.Entities.TAXPAYER", b =>
                {
                    b.HasOne("CAP.Entity.Entities.ADDRESS", "tp_address")
                        .WithMany("tax_payers")
                        .HasForeignKey("tp_addressID");

                    b.Navigation("tp_address");
                });

            modelBuilder.Entity("CAP.Entity.Entities.ADDRESS", b =>
                {
                    b.Navigation("tax_payers");
                });
#pragma warning restore 612, 618
        }
    }
}
